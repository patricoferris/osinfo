name: Tests for osinfo
on: [push, pull_request]
jobs:
  generation:
    strategy:
      matrix:
        operating-system: [macos-latest, ubuntu-latest, windows-latest]
        ocaml-version: [ 4.11.1 ]
    runs-on: ${{ matrix.operating-system }}
    steps:
    - uses: actions/checkout@v2
    - uses: avsm/setup-ocaml@v1
      with:
        ocaml-version: ${{ matrix.ocaml-version }}
    - name: Pinning Package
      run: opam pin add -yn osinfo.dev './'
    - name: Packages
      run: opam depext -yt osinfo.dev
    - name: Dependencies
      run: opam install -t -y . --deps-only
    - name: Building
      run: "opam exec -- dune build @install @runtest"
    - name: Run 
      run: _build/default/gen/main.exe
    - name: Print
      run: cat _build/default/gen/generated.out && ls -R _build
    - name: Uploading
      uses: 'actions/upload-artifact@v2'
      with: 
        name: ${{ matrix.operating-system }}-${{ matrix.ocaml-version }}
        path: _build/default/gen/generated.out
  combining:
    needs: generation
    strategy:
      matrix:
        operating-system: [ ubuntu-latest ]
        ocaml-version: [ 4.11.1 ]
    runs-on: ${{ matrix.operating-system }}
    steps:
      - name: Downloading artifacts
        uses: 'actions/download-artifact@v2'
        with: 
          path: artifacts
      - name: Display structure
        run: ls -R 
        working-directory: artifacts
      - name: Print combined
        run: cat */generated.out > main.ml && cat main.ml
        working-directory: artifacts
    
